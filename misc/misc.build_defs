subrepo = subrepo_name()
subrepo = f"///{subrepo}" if subrepo else ""

CONFIG.setdefault("YQ_TOOL", subrepo + "//tools/misc:yq")

def yaml_merge(name:str, srcs:list, out:str, overwrite:bool=False, append:bool=False,
               indent:int=None, json:bool=False, pretty:bool=False,
               labels:list=[], visibility:list=None, test_only:bool&testonly=False):
    """Merges one or more YAML files.

    Args:
      name (str): Name of the rule.
      srcs (str): YAML source files.
      out (str): Final YAML file output.
      overwrite (bool): Overwrite existing values using the values from each additional yaml file.
      append (bool): Merge existing arrays from each additional yaml file.
      json (bool): Output the result as JSON.
      pretty (bool): Pretty print the resulting JSON.
      labels (list): Labels for this rule.
      visibility (list): Visibility declaration of the rule.
      test_only (bool): If true the rule is only visible to test targets.
    """

    assert len(srcs) > 0, "at least one YAML file is required"
    assert out, "Output is required"

    cmd = '"$TOOLS_YQ" merge'

    if overwrite:
        cmd += " --overwrite"

    if append:
        cmd += " --append"

    if indent:
        assert indent > 2, "indent level needs to be at least 2"

        cmd += f" --indent {indent}"

    if json:
        cmd += " --tojson"

    if pretty:
        cmd += " --prettyPrint"

    cmd += ' $SRCS > "$OUT"'

    return genrule(
        name = name,
        srcs = srcs,
        cmd = cmd,
        outs = [out],
        tools = {"yq": [CONFIG.YQ_TOOL]},
        labels = labels,
        visibility = visibility,
        test_only = test_only,
    )

CONFIG.setdefault("SED_TOOL", "sed")

def sed(name:str, src:str, out:str, command:str,
        labels:list=[], visibility:list=None, test_only:bool&testonly=False):
    """Send a file through sed.

    Args:
      name (str): Name of the rule.
      src (str): Input file.
      out (str): Output file.
      command (str): Sed command.
      labels (list): Labels for this rule.
      visibility (list): Visibility declaration of the rule.
      test_only (bool): If true the rule is only visible to test targets.
    """

    assert src, "Input file is required"
    assert out, "Output is required"

    return genrule(
        name = name,
        srcs = [src],
        cmd = f'"$TOOLS_SED" {command} $SRCS > "$OUT"',
        outs = [out],
        tools = {"sed": [CONFIG.SED_TOOL]},
        labels = labels,
        visibility = visibility,
        test_only = test_only,
    )
