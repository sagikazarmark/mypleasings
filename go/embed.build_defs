subrepo = subrepo_name()
subrepo = f"///{subrepo}" if subrepo else ""

CONFIG.setdefault("GO_BINDATA_TOOL", subrepo + "//tools/go:go-bindata")

def go_bindata(name:str, srcs:list, out:str=None, prefix:str=None, pkg:str=None, ignore:str=None,
               mode:int=None, modtime:int=None, compress:bool=True, memcopy:bool=True, metadata:bool=True,
               tags:list=[], debug:bool=False, dev:bool=False,
               labels:list=[], visibility:list=None, test_only:bool&testonly=False):
    """Embed files into Go file to be consumed by Go code without relying on the filesystem.

    See go-bindata documentation for details: https://github.com/kevinburke/go-bindata

    Pro tip: prefix = '$PKG' will remove the package path prefix from files in the same package.

    Args:
      name (str): Name of the rule.
      srcs (list): Source files to be included in the binary.
      out (str): Output name of the generated file. Chosen automatically if not given.
      prefix (str): Optional path prefix to strip off asset names.
      pkg (str): Package name to use in the generated code. (go-bindata default: "main")
      ignore (str): Regex pattern to ignore.
      mode (int): Optional file mode override for all files.
      modtime (int): Optional modification unix timestamp override for all files.
      compress (bool): GZIP compress assets.
      memcopy (bool): Use memcopy instead of a .rodata hack. (see documentation link above)
      metadata (bool): Preserve size, mode, and modtime info.
      tags (list): Optional set of build tags to include.
      debug (int): Do not embed the assets, but provide the embedding API.
                   Contents will still be loaded from disk.
      dev (int): Similar to debug, but does not emit absolute paths.
                 Expects a rootDir variable to already exist in the generated code's package.
      labels (list): Labels for this rule.
      visibility (list): Visibility declaration of the rule.
      test_only (bool): If true the rule is only visible to test targets.
    """

    cmd = ['"$TOOL"']

    if out:
        cmd += ["-o", out]

    if prefix:
        cmd += ["-prefix", prefix]

    if pkg:
        cmd += ["-pkg", pkg]

    if ignore:
        cmd += ["-ignore", ignore]

    if mode:
        cmd += ["-mode", mode]

    if modtime:
        cmd += ["-modtime", modtime]

    if not compress:
        cmd += ["-nocompress"]

    if not memcopy:
        cmd += ["-nomemcopy"]

    if not metadata:
        cmd += ["-nometadata"]

    if len(tags) > 0:
        cmd += ["-tags", ",".join(tags)]

    if debug:
        cmd += ["-debug"]

    if dev:
        cmd += ["-dev"]

    cmd += ["$SRCS"]

    return genrule(
        name = name,
        srcs = srcs,
        outs = [out or "bindata.go"],
        cmd = " ".join(cmd),
        tools = [CONFIG.GO_BINDATA_TOOL],
        labels = labels + ["codegen"],
        visibility = visibility,
        test_only = test_only,
    )
