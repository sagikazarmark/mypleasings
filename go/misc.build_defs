subrepo = subrepo_name()
subrepo = f"///{subrepo}" if subrepo else ""

subinclude("//misc")

CONFIG.setdefault("GOLANGCI_LINT_DEFAULT_CONFIG", "%s//%s:golangci.defaults.yaml" % (subrepo, package_name()))

def golangci_lint_config(name:str, out:str=None, custom:str=None,
                         labels:list=[], visibility:list=None, test_only:bool&testonly=False):
    """Downloads a precompiled golangci-lint binary.

    Args:
      name (str): Name of the rule.
      out (str): Output name of the config file. Chosen automatically if not given.
      custom (str): Custom configuration to be merged into the default one.
      labels (list): Labels for this rule.
      visibility (list): Visibility declaration of the rule.
      test_only (bool): If true the rule is only visible to test targets.
    """

    out = out or ".golangci.yml"

    config = sed(
        name = name,
        tag = "default" if custom else None,
        src = CONFIG.GOLANGCI_LINT_DEFAULT_CONFIG,
        out = ".golangci.config.yml" if custom else out,
        command = f"s|IMPORT_PATH|{CONFIG.GO_IMPORT_PATH}|g",
        labels = labels,
        visibility = visibility if custom else None,
        test_only = test_only,
    )

    if custom:
        return yaml_merge(
            name = name,
            srcs = [config, custom],
            out = out,
            labels = labels,
            visibility = visibility,
            test_only = test_only,
        )

    return config
